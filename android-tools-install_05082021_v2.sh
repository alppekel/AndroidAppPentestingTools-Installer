#!/bin/bash

#####################################################################
# This script install tools that can help to analyze android apps   #
#                                                                   #
# Tested on Ubuntu 20.04                                            #
#								    #
#####################################################################


function usage(){
	echo
        echo "Usage: ./my_script.sh [options]"
        echo
        echo "Options:"
        echo "-h or --help : Print help."
        echo "-l or --list : List packages that can be installed. It also install dependencies."
        echo "-i or --install [package name] : Install package. You need to install dependencies."
        echo "-a or --all : Installed all packages."
        echo
}

function package_list(){
        echo "Package List:"
        echo
        echo "1) Drozer"
        echo "2) MobSF"
        echo "3) Apktool"
        echo "4) Jd-gui"
        echo "5) Dex2jar"
        echo "6) Android Studio"
        echo "7) Andbug"
        echo "8) Frida"
        echo "9) Qark"
        echo "10) Apkx"
	echo "11) Dependencies"
}

#####################################################################
# Install  Functions                                                #
#####################################################################

function install_dependencies(){
	echo
	echo "Installing: build-essential,git,python-dev-is-python2,default-jre,default-jdk"
	sudo apt update -y
	sudo apt install build-essential git python-dev-is-python2 default-jre\
	default-jdk python3-pip curl -y
	curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py
	sudo python2 get-pip.py
	rm get-pip.py

}

function install_drozer(){
	echo
	mkdir drozer
	cd drozer
	echo "Downloading Drozer"
	wget https://github.com/FSecureLABS/drozer/releases/download/2.4.4/drozer-2.4.4-py2-none-any.whl
	echo "Installing Drozer"
	sudo pip2.7 install wheel
	sudo pip2.7 install pyyaml
	sudo pip2.7 install pyhamcrest
	sudo pip2.7 install protobuf
	sudo pip2.7 install pyopenssl
	sudo pip2.7 install twisted
	sudo pip2.7 install service_identity
	sudo pip2.7 install drozer-2.4.4-py2-none-any.whl
	cd ..
	echo "Downloading Drozer Agent"
	wget https://github.com/FSecureLABS/drozer/releases/download/2.3.4/drozer-agent-2.3.4.apk
}

function install_frida(){
	echo
	echo "Installing Frida"
	sudo pip3 install frida-tools || (echo "Installation failed" && exit)
}

function install_mobSF(){
	echo
	echo "Downlading and Installing mobSF"
	sudo apt install python3-venv python3-dev build-essential \
	libffi-dev libssl-dev libxml2-dev libxslt1-dev libjpeg8-dev zlib1g-dev -y
	git clone https://github.com/MobSF/Mobile-Security-Framework-MobSF.git
	cd Mobile-Security-Framework-MobSF/
	sudo ./setup.sh
	cd ..
}

function install_qark(){
	echo
	echo "Downloading and Installing Qark"
	git clone https://github.com/linkedin/qark
	cd qark
	sudo pip2.7 install -r requirements.txt
	sudo pip2.7 install .
	cd ..
}

function install_dex2jar(){
	echo
	echo "Downloading dex2jar"
	wget https://sourceforge.net/projects/dex2jar/files/dex2jar-2.0.zip 2>&1 | grep -i "error"
	unzip -xqq dex2jar-2.0.zip
	cd dex2jar-2.0
	chmod +x d2j_invoke.sh
	cd ..
	rm -r dex2jar-2.0.zip
	echo "Done"
}

function install_jd-gui(){
	echo
	echo "Downloading JD-GUI"
	git clone https://github.com/java-decompiler/jd-gui.git
	cd jd-gui
	echo
	echo "Building JD-GUI"
	./gradlew build
	cd ..
	cp jd-gui/build/libs/jd-gui-*.jar .
	rm jd-gui-*-min.jar
}

function install_apkx(){
	echo
	echo "Downloading and Installing Apkx"
	git clone https://github.com/b-mueller/apkx
	cd apkx
	echo
	echo "Installing Apkx"
	sudo ./install.sh
	echo "Done"
	cd ..
}

function install_apktool(){
	echo
	echo "Downloading Apktool"
	wget https://github.com/iBotPeaches/Apktool/releases/download/v2.5.0/apktool_2.5.0.jar
	echo "Done"
}

function install_andbug(){
	echo
	echo "Downloading and Installing AndBug"
	git clone https://github.com/swdunlop/AndBug.git
	cd AndBug
	sudo python setup.py install
	cd ..
	sudo ln ~/Android/Sdk/platform-tools/adb /bin/adb

}
function install_android_studio(){
	echo
	echo "Downloading and Installing Android Studio"
	wget https://redirector.gvt1.com/edgedl/android/studio/ide-zips/2020.3.1.22/android-studio-2020.3.1.22-linux.tar.gz
	tar xvzf android-studio-*.tar.gz
	cd android-studio/bin/
	./studio.sh
	cd ../../
	rm android-studio-*.tar.gz
}

function install_all(){
	echo
	echo "Installing all packages"
        install_apktool
        install_apkx
        install_jd-gui
        install_dex2jar
        install_qark
        #install_mobSF
        install_frida
	install_drozer
	install_android_studio
	install_andbug
}


######################################################
# Main                                               #
######################################################


case "$1" in
	"-h"|"--help")	usage;exit;;
	"-l"|"--list")	package_list;exit;;
	"-a"|"--all")	install_all;;
	"-i"|"--install")
		if [[ "$2" == "android-studio" ]];then
			install_android_studio
		fi
		if [[ "$2" == "andbug" ]];then
			install_andbug
		fi
		if [[ "$2" == "apktool" ]];then
			install_apktool
		fi
		if [[ "$2" == "apkx" ]];then
                        install_apkx
                fi
		if [[ "$2" == "jd-gui" ]];then
                        install_jd-gui
                fi
		if [[ "$2" == "dex2jar" ]];then
                        install_dex2jar
                fi
		if [[ "$2" == "qark" ]];then
                        install_qark
                fi
		if [[ "$2" == "mobsf" ]];then
                        install_mobSF
                fi
		if [[ "$2" == "frida" ]];then
                        install_frida
                fi
		if [[ "$2" == "drozer" ]];then
                        install_drozer
                fi
		;;
	*) echo "Invalid option";usage;exit;;
esac
